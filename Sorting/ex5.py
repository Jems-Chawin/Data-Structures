def bubbleSort(arr):
    n = len(arr)
     
    for i in range(n-1):
        swapped = False

        for j in range(0, n-i-1):
 
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
                swapped = True

        if (swapped == False):
            break
def sortSubset(arr):
    n = len(arr)
     
    for i in range(n-1):
        swapped = False

        for j in range(0, n-i-1):
 
            if len(arr[j]) > len(arr[j+1]) or (len(arr[j]) == len(arr[j+1]) and arr[j][0] > arr[j+1][0]):
                arr[j], arr[j+1] = arr[j+1], arr[j]
                swapped = True

        if (swapped == False):
            break
def subsetSum(arr,target):
    def backtrack(start, target, current_subset):
        if target == 0:
            subsets.append(list(current_subset))
            return
        if target < 0:
            return
        for i in range(start, len(arr)):
            current_subset.append(arr[i])
            backtrack(i + 1, target - arr[i], current_subset)
            current_subset.pop()
    subsets = []
    backtrack(0, target, [])
    if subsets == []:
        print('No Subset')
        return subsets
    sortSubset(subsets)
    for subset in subsets:print(subset)
    return subsets
try:
    target,numbers = input("Enter Input : ").split('/')
    numbers = [int(x) for x in numbers.split()]
    bubbleSort(numbers)
    subsetSum(numbers,int(target))
except ValueError:
    pass

'''
example test cases

Enter Input : 2/-2 3 1 -1 0 -3 2
[2]
[-1, 3]
[0, 2]
[-3, 2, 3]
[-2, 1, 3]
[-1, 0, 3]
[-1, 1, 2]
[-3, 0, 2, 3]
[-2, -1, 2, 3]
[-2, 0, 1, 3]
[-1, 0, 1, 2]
[-3, -1, 1, 2, 3]
[-2, -1, 0, 2, 3]
[-3, -1, 0, 1, 2, 3]

Enter Input : 2/1 0 2 -1
[2]
[0, 2]
[-1, 1, 2]
[-1, 0, 1, 2]

Enter Input : 1/-5 -4 -3 -2 -1 0 1 2 3 4 5
[1]
[-4, 5]
[-3, 4]
[-2, 3]
[-1, 2]
[0, 1]
[-5, 1, 5]
[-5, 2, 4]
[-4, 0, 5]
[-4, 1, 4]
[-4, 2, 3]
[-3, -1, 5]
[-3, 0, 4]
[-3, 1, 3]
[-2, -1, 4]
[-2, 0, 3]
[-2, 1, 2]
[-1, 0, 2]
[-5, -3, 4, 5]
[-5, -2, 3, 5]
[-5, -1, 2, 5]
[-5, -1, 3, 4]
[-5, 0, 1, 5]
[-5, 0, 2, 4]
[-5, 1, 2, 3]
[-4, -3, 3, 5]
[-4, -2, 2, 5]
[-4, -2, 3, 4]
[-4, -1, 1, 5]
[-4, -1, 2, 4]
[-4, 0, 1, 4]
[-4, 0, 2, 3]
[-3, -2, 1, 5]
[-3, -2, 2, 4]
[-3, -1, 0, 5]
[-3, -1, 1, 4]
[-3, -1, 2, 3]
[-3, 0, 1, 3]
[-2, -1, 0, 4]
[-2, -1, 1, 3]
[-2, 0, 1, 2]
[-5, -4, 1, 4, 5]
[-5, -4, 2, 3, 5]
[-5, -3, 0, 4, 5]
[-5, -3, 1, 3, 5]
[-5, -3, 2, 3, 4]
[-5, -2, -1, 4, 5]
[-5, -2, 0, 3, 5]
[-5, -2, 1, 2, 5]
[-5, -2, 1, 3, 4]
[-5, -1, 0, 2, 5]
[-5, -1, 0, 3, 4]
[-5, -1, 1, 2, 4]
[-5, 0, 1, 2, 3]
[-4, -3, -1, 4, 5]
[-4, -3, 0, 3, 5]
[-4, -3, 1, 2, 5]
[-4, -3, 1, 3, 4]
[-4, -2, -1, 3, 5]
[-4, -2, 0, 2, 5]
[-4, -2, 0, 3, 4]
[-4, -2, 1, 2, 4]
[-4, -1, 0, 1, 5]
[-4, -1, 0, 2, 4]
[-4, -1, 1, 2, 3]
[-3, -2, -1, 2, 5]
[-3, -2, -1, 3, 4]
[-3, -2, 0, 1, 5]
[-3, -2, 0, 2, 4]
[-3, -2, 1, 2, 3]
[-3, -1, 0, 1, 4]
[-3, -1, 0, 2, 3]
[-2, -1, 0, 1, 3]
[-5, -4, -2, 3, 4, 5]
[-5, -4, -1, 2, 4, 5]
[-5, -4, 0, 1, 4, 5]
[-5, -4, 0, 2, 3, 5]
[-5, -4, 1, 2, 3, 4]
[-5, -3, -2, 2, 4, 5]
[-5, -3, -1, 1, 4, 5]
[-5, -3, -1, 2, 3, 5]
[-5, -3, 0, 1, 3, 5]
[-5, -3, 0, 2, 3, 4]
[-5, -2, -1, 0, 4, 5]
[-5, -2, -1, 1, 3, 5]
[-5, -2, -1, 2, 3, 4]
[-5, -2, 0, 1, 2, 5]
[-5, -2, 0, 1, 3, 4]
[-5, -1, 0, 1, 2, 4]
[-4, -3, -2, 1, 4, 5]
[-4, -3, -2, 2, 3, 5]
[-4, -3, -1, 0, 4, 5]
[-4, -3, -1, 1, 3, 5]
[-4, -3, -1, 2, 3, 4]
[-4, -3, 0, 1, 2, 5]
[-4, -3, 0, 1, 3, 4]
[-4, -2, -1, 0, 3, 5]
[-4, -2, -1, 1, 2, 5]
[-4, -2, -1, 1, 3, 4]
[-4, -2, 0, 1, 2, 4]
[-4, -1, 0, 1, 2, 3]
[-3, -2, -1, 0, 2, 5]
[-3, -2, -1, 0, 3, 4]
[-3, -2, -1, 1, 2, 4]
[-3, -2, 0, 1, 2, 3]
[-5, -4, -3, 1, 3, 4, 5]
[-5, -4, -2, 0, 3, 4, 5]
[-5, -4, -2, 1, 2, 4, 5]
[-5, -4, -1, 0, 2, 4, 5]
[-5, -4, -1, 1, 2, 3, 5]
[-5, -4, 0, 1, 2, 3, 4]
[-5, -3, -2, -1, 3, 4, 5]
[-5, -3, -2, 0, 2, 4, 5]
[-5, -3, -2, 1, 2, 3, 5]
[-5, -3, -1, 0, 1, 4, 5]
[-5, -3, -1, 0, 2, 3, 5]
[-5, -3, -1, 1, 2, 3, 4]
[-5, -2, -1, 0, 1, 3, 5]
[-5, -2, -1, 0, 2, 3, 4]
[-4, -3, -2, -1, 2, 4, 5]
[-4, -3, -2, 0, 1, 4, 5]
[-4, -3, -2, 0, 2, 3, 5]
[-4, -3, -2, 1, 2, 3, 4]
[-4, -3, -1, 0, 1, 3, 5]
[-4, -3, -1, 0, 2, 3, 4]
[-4, -2, -1, 0, 1, 2, 5]
[-4, -2, -1, 0, 1, 3, 4]
[-3, -2, -1, 0, 1, 2, 4]
[-5, -4, -3, -1, 2, 3, 4, 5]
[-5, -4, -3, 0, 1, 3, 4, 5]
[-5, -4, -2, -1, 1, 3, 4, 5]
[-5, -4, -2, 0, 1, 2, 4, 5]
[-5, -4, -1, 0, 1, 2, 3, 5]
[-5, -3, -2, -1, 0, 3, 4, 5]
[-5, -3, -2, -1, 1, 2, 4, 5]
[-5, -3, -2, 0, 1, 2, 3, 5]
[-5, -3, -1, 0, 1, 2, 3, 4]
[-4, -3, -2, -1, 0, 2, 4, 5]
[-4, -3, -2, -1, 1, 2, 3, 5]
[-4, -3, -2, 0, 1, 2, 3, 4]
[-5, -4, -3, -2, 1, 2, 3, 4, 5]
[-5, -4, -3, -1, 0, 2, 3, 4, 5]
[-5, -4, -2, -1, 0, 1, 3, 4, 5]
[-5, -3, -2, -1, 0, 1, 2, 4, 5]
[-4, -3, -2, -1, 0, 1, 2, 3, 5]
[-5, -4, -3, -2, 0, 1, 2, 3, 4, 5]
'''
